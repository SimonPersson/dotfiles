diff -up dwm-6.2-orig/config.def.h.orig dwm-6.2/config.def.h.orig
--- dwm-6.2-orig/config.def.h.orig	2020-11-23 23:42:41.394780559 +0100
+++ dwm-6.2/config.def.h.orig	2019-02-02 13:55:28.000000000 +0100
@@ -16,11 +16,6 @@ static const char *colors[][3]      = {
 	/*               fg         bg         border   */
 	[SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
 	[SchemeSel]  = { col_gray4, col_cyan,  col_cyan  },
-	[SchemeStatus]  = { col_gray3, col_gray1,  "#000000"  }, // Statusbar right {text,background,not used but cannot be empty}
-	[SchemeTagsSel]  = { col_gray4, col_cyan,  "#000000"  }, // Tagbar left selected {text,background,not used but cannot be empty}
-    [SchemeTagsNorm]  = { col_gray3, col_gray1,  "#000000"  }, // Tagbar left unselected {text,background,not used but cannot be empty}
-    [SchemeInfoSel]  = { col_gray4, col_cyan,  "#000000"  }, // infobar middle  selected {text,background,not used but cannot be empty}
-    [SchemeInfoNorm]  = { col_gray3, col_gray1,  "#000000"  }, // infobar middle  unselected {text,background,not used but cannot be empty}
 };
 
 /* tagging */
diff -up dwm-6.2-orig/drw.c dwm-6.2/drw.c
--- dwm-6.2-orig/drw.c	2020-11-23 23:42:41.393780559 +0100
+++ dwm-6.2/drw.c	2020-11-24 00:20:26.221917101 +0100
@@ -433,3 +433,22 @@ drw_cur_free(Drw *drw, Cur *cursor)
 	XFreeCursor(drw->dpy, cursor->cursor);
 	free(cursor);
 }
+
+int
+drw_get_width(Drw *drw, int numcolors, const char *text)
+{
+	int i;
+	Fnt curfont = drw->fonts[0];
+	int w = drw_text(drw, 0, 0, 0, 0, 0, text, 0) + curfont.h;
+
+	for (i = 0; i < strlen(text); i++) {
+		if (text[i] > 0 && text[i] <= numcolors) {
+			/* we found a color code
+			 * drw_text counted it as a normal character and added one character's width
+			 * we aren't going to render this character, so we remove one character's width */
+			w -= curfont.xfont->max_advance_width;
+		}
+	}
+
+  return w;
+}
diff -up dwm-6.2-orig/drw.h dwm-6.2/drw.h
--- dwm-6.2-orig/drw.h	2020-11-23 23:42:41.393780559 +0100
+++ dwm-6.2/drw.h	2020-11-24 00:06:48.154867781 +0100
@@ -50,6 +50,7 @@ void drw_setfontset(Drw *drw, Fnt *set);
 void drw_setscheme(Drw *drw, Clr *scm);
 
 /* Drawing functions */
+int drw_get_width(Drw *, int, const char *);
 void drw_rect(Drw *drw, int x, int y, unsigned int w, unsigned int h, int filled, int invert);
 int drw_text(Drw *drw, int x, int y, unsigned int w, unsigned int h, unsigned int lpad, const char *text, int invert);
 
diff -up dwm-6.2-orig/dwm.c dwm-6.2/dwm.c
--- dwm-6.2-orig/dwm.c	2020-11-23 23:42:41.394780559 +0100
+++ dwm-6.2/dwm.c	2020-11-24 00:30:09.499952265 +0100
@@ -699,13 +699,27 @@ drawbar(Monitor *m)
 	int boxs = drw->fonts->h / 9;
 	int boxw = drw->fonts->h / 6 + 2;
 	unsigned int i, occ = 0, urg = 0;
+	char *ts = stext;
+	char *tp = stext;
+	int tx = 0;
+	char ctmp;
 	Client *c;
 
 	/* draw status first so it can be overdrawn by tags later */
 	if (m == selmon) { /* status is only drawn on selected monitor */
 		drw_setscheme(drw, scheme[SchemeStatus]);
-		sw = TEXTW(stext) - lrpad + 2; /* 2px right padding */
-		drw_text(drw, m->ww - sw, 0, sw, bh, 0, stext, 0);
+		sw = drw_get_width(drw, NUMCOLORS, stext) -  lrpad + 2;
+		while (1) {
+			for(i=0; *ts<0 || *ts>LENGTH(colors); ++i, ++ts);
+			ctmp = *ts;
+			*ts = '\0';
+			if(i) drw_text(drw, m->ww - sw + tx, 0, sw - tx, bh, 0, tp, 0);
+			tx += TEXTW(tp) -lrpad;
+			if (ctmp == '\0') { break; }
+			drw_setscheme(drw, scheme[(unsigned int)(ctmp-1)]);
+			*ts = ctmp;
+			tp = ++ts;
+		}
 	}
 
 	for (c = m->clients; c; c = c->next) {
